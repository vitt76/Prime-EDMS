.. _deployment_direct:

=================
Direct deployment
=================

.. warning::

   The direct deployment method is not recommended and intended for limited
   scenarios.


Mayan EDMS should be deployed like any other Django_ project and
preferably using virtualenv_.

Being a Django_ and a Python_ project, familiarity with these technologies is
recommended to better understand why Mayan EDMS does some of the things it
does.

Compilers and development libraries will be installed to compile runtime
libraries. LibreOffice and Poppler utils will also be installed as they are
used to convert document files. Supervisor (https://supervisord.org/), a
Process Control System, will be used to monitor and keep all Mayan processes
running.

The installation steps will be performed on |DEFAULT_OS_DISTRIBUTION|.


#. Install binary dependencies:

   .. code-block:: console

       sudo apt-get install --yes ca-certificates fonts-arphic-uming \
       fonts-arphic-ukai fonts-unfonts-core gcc gnupg1 graphviz libfuse2 \
       libarchive-zip-perl libimage-exiftool-perl libmagic1 \
       libreoffice-calc-nogui libreoffice-draw-nogui libreoffice-impress-nogui \
       libreoffice-math-nogui libreoffice-writer-nogui libfile-mimeinfo-perl \
       libldap-2.4-2 libldap-dev libpq-dev libpq5 libsasl2-dev libsasl2-2 \
       poppler-utils postgresql python3-dev python3-venv rabbitmq-server \
       redis-server sane-utils supervisor tesseract-ocr


   .. important::

     For Mayan EDMS 4.1 and later, Supervisord must be upgraded to version
     4.2.2 or later. See troubleshooting section:
     :ref:`troubleshooting-version-4.1`


   .. note::

       Platforms with the ARM CPU might also need additional requirements:

       .. code-block:: console

           sudo apt-get install --yes libffi-dev libssl-dev


#. Create the user account for the installation:

   This will create an unprivileged user account that is also unable to login:

   .. code-block:: console

       sudo adduser |DEFAULT_OS_USERNAME| --disabled-password --disabled-login --gecos ""


#. Create the parent directory where the project will be deployed:

   ``/opt/`` is a good choice as it is meant for "software and add-on packages
   that are not part of the default installation". (https://www.tldp.org/LDP/Linux-Filesystem-Hierarchy/html/opt.html).
   Create the ``/opt`` directory if it doesn't already exists:

   .. code-block:: console

       sudo mkdir --parent /opt


#. Create the Python virtual environment:

   This will keep all the Python packages installed here isolated from the rest
   of the Python packages in the system:

   .. code-block:: console

       sudo python3 -m venv |MAYAN_INSTALLATION_DIRECTORY|


#. Make the mayan user the owner of the installation directory:

   .. code-block:: console

       sudo chown |DEFAULT_OS_USERNAME|:|DEFAULT_OS_GROUP| |MAYAN_INSTALLATION_DIRECTORY| -R


#. Upgrade to the latest pip version:

   .. code-block:: console

       sudo -u |DEFAULT_OS_USERNAME| |MAYAN_PIP_BIN| install pip==|PYTHON_PIP_VERSION|


#. Install Mayan EDMS from PyPI:

   .. code-block:: console

       sudo -u |DEFAULT_OS_USERNAME| |MAYAN_PIP_BIN| install mayan-edms


#. Install the Python client for PostgreSQL, RabbitMQ, and Redis:

   .. code-block:: console

       sudo -u |DEFAULT_OS_USERNAME| |MAYAN_PIP_BIN| install amqp==|PYTHON_AMQP_VERSION| psycopg2==|PYTHON_PSYCOPG2_VERSION| redis==|PYTHON_REDIS_VERSION|

   .. note::

       Platforms with the ARM CPU might also need additional requirements:

       .. code-block:: console

           sudo -u |DEFAULT_OS_USERNAME| |MAYAN_PIP_BIN| install psutil==|PYTHON_PSUTIL_VERSION|


#. Create the RabbitMQ user and vhost:

   .. code-block:: console

       sudo rabbitmqctl add_user |DEFAULT_RABBITMQ_USER| |DEFAULT_RABBITMQ_PASSWORD|
       sudo rabbitmqctl add_vhost |DEFAULT_RABBITMQ_VHOST|
       sudo rabbitmqctl set_permissions -p |DEFAULT_RABBITMQ_VHOST| |DEFAULT_RABBITMQ_USER| ".*" ".*" ".*"


#. Create the database for the installation:

   .. code-block:: console

       sudo -u postgres psql -c "CREATE USER |DEFAULT_DATABASE_USER| WITH password '|DEFAULT_DATABASE_PASSWORD|';"
       sudo -u postgres createdb -O |DEFAULT_DATABASE_USER| |DEFAULT_DATABASE_NAME|


#. Configure Redis:

   Configure Redis to discard data when it runs out of memory, not save its
   database, keep 3 database, and be password protected:

   .. code-block:: console

       echo "maxmemory-policy allkeys-lru" | sudo tee -a /etc/redis/redis.conf
       echo "save \"\"" | sudo tee -a /etc/redis/redis.conf
       echo "databases 3" | sudo tee -a /etc/redis/redis.conf
       echo "requirepass |DEFAULT_REDIS_PASSWORD|" | sudo tee -a /etc/redis/redis.conf
       sudo systemctl restart redis


#. Initialize the project:

   This step will create all the database structures, download and compress
   static media files like JavaScript libraries and HTML frameworks, and
   create and initial admin account with a random password.

   .. note::

       For simplicity, the ``MAYAN_MEDIA_ROOT`` folder is set to be a subfolder
       of the installation. If you want to keep your files separated from
       the installation files, change the value of the ``MAYAN_MEDIA_ROOT``
       variable in this and all subsequent steps. Be sure to first create the
       folder and give ownership of it to the ``|DEFAULT_OS_USERNAME|`` user
       with the ``chown`` command.

   .. warning::

       If this step is interrupted, even if it is later resumed, will
       cause the automatic admin user to not be created in some cases. Make
       sure all environment variables and values are correct. If this
       happens, refer to the troubleshooting chapters:
       :ref:`troubleshooting-autoadmin-account` and
       :ref:`troubleshooting-admin-password`.

   .. code-block:: console

       sudo -u |DEFAULT_OS_USERNAME| \
       MAYAN_CELERY_BROKER_URL="amqp://|DEFAULT_RABBITMQ_USER|:|DEFAULT_RABBITMQ_PASSWORD|@127.0.0.1:5672/|DEFAULT_RABBITMQ_VHOST|" \
       MAYAN_CELERY_RESULT_BACKEND="redis://:|DEFAULT_REDIS_PASSWORD|@127.0.0.1:6379/1" \
       MAYAN_DATABASES="{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'|DEFAULT_DATABASE_NAME|','PASSWORD':'|DEFAULT_DATABASE_PASSWORD|','USER':'|DEFAULT_DATABASE_USER|','HOST':'127.0.0.1'}}" \
       MAYAN_LOCK_MANAGER_BACKEND="mayan.apps.lock_manager.backends.redis_lock.RedisLock" \
       MAYAN_LOCK_MANAGER_BACKEND_ARGUMENTS="{'redis_url':'redis://:|DEFAULT_REDIS_PASSWORD|@127.0.0.1:6379/2'}" \
       MAYAN_MEDIA_ROOT="|MAYAN_MEDIA_ROOT|" \
       |MAYAN_BIN| common_initial_setup


#. Create the supervisor file at ``|MAYAN_SUPERVISOR_CONF|``:

   .. note::

       The generated supervisor file assumes Mayan EDMS is being installed
       into ``|MAYAN_INSTALLATION_DIRECTORY|``. If you are installing
       Mayan EDMS in a different location, you must manually review the produced
       ``|MAYAN_SUPERVISOR_CONF|`` file and update all directory references
       from ``|MAYAN_INSTALLATION_DIRECTORY|`` to match your custom installation directory.

   .. code-block:: console

       sudo -u |DEFAULT_OS_USERNAME| MAYAN_MEDIA_ROOT="|MAYAN_MEDIA_ROOT|" |MAYAN_BIN| platform_template supervisord | sudo sh -c "cat > |MAYAN_SUPERVISOR_CONF|"


#. Enable and restart the services [1_]:

   .. code-block:: console

       sudo systemctl enable supervisor
       sudo systemctl restart supervisor


#. Cleaning up:

   The following operating system dependencies are only needed during
   installation and can be removed.

   .. code-block:: console

       sudo apt-get remove --purge --yes libjpeg-dev libpq-dev libpng-dev libtiff-dev zlib1g-dev


[1]: https://bugs.launchpad.net/ubuntu/+source/supervisor/+bug/1594740

.. _Debian: https://www.debian.org/
.. _Django: https://www.djangoproject.com/
.. _Python: https://www.python.org/
.. _SQLite: https://www.sqlite.org/
.. _Ubuntu: http://www.ubuntu.com/
.. _virtualenv: http://www.virtualenv.org/en/latest/index.html
.. _1: https://bugs.launchpad.net/ubuntu/+source/supervisor/+bug/1594740
