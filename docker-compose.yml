version: '3.8'

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  mayan_data:

services:
  postgresql:
    image: postgres:12.10-alpine
    container_name: prime-edms_postgresql_1
    environment:
      POSTGRES_DB: mayan
      POSTGRES_USER: mayan
      POSTGRES_PASSWORD: mayandbpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mayan -d mayan"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    container_name: prime-edms_redis_1
    command: redis-server --requirepass mayanredispassword
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    container_name: prime-edms_rabbitmq_1
    environment:
      RABBITMQ_DEFAULT_USER: mayan
      RABBITMQ_DEFAULT_PASS: mayanrabbitpass
      RABBITMQ_DEFAULT_VHOST: mayan
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: prime-edms_app:latest
    container_name: prime-edms_app_1
    environment:
      MAYAN_DATABASES: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'mayan','PASSWORD':'mayandbpass','USER':'mayan','HOST':'postgresql'}}"
      MAYAN_CELERY_BROKER_URL: amqp://mayan:mayanrabbitpass@rabbitmq:5672/mayan
      MAYAN_CELERY_RESULT_BACKEND: redis://:mayanredispassword@redis:6379/1
      MAYAN_LOCK_MANAGER_BACKEND: mayan.apps.lock_manager.backends.redis_lock.RedisLock
      MAYAN_LOCK_MANAGER_BACKEND_ARGUMENTS: "{'redis_url':'redis://:mayanredispassword@redis:6379/2'}"
      MAYAN_CONFIGURATION_FILE: /opt/mayan-edms/config.yml
      # Force add our extensions via environment
      MAYAN_COMMON_EXTRA_APPS: "['mayan.apps.converter_pipeline_extension', 'mayan.apps.distribution']"
      # Устанавливаем PYTHONPATH для гарантированной загрузки расширения
      PYTHONPATH: /opt/mayan-edms/lib/python3.9/site-packages
    volumes:
      - mayan_data:/var/lib/mayan
      - ./config.yml:/opt/mayan-edms/config.yml:ro
      - ./mayan/apps/converter_pipeline_extension:/opt/mayan-edms/lib/python3.9/site-packages/mayan/apps/converter_pipeline_extension:ro
      - ./mayan/apps/distribution:/opt/mayan-edms/lib/python3.9/site-packages/mayan/apps/distribution:ro
      - ./mayan/apps/rest_api:/opt/mayan-edms/lib/python3.9/site-packages/mayan/apps/rest_api
      - ./mayan/urls:/opt/mayan-edms/lib/python3.9/site-packages/mayan/urls
    ports:
      - "80:8000"
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
